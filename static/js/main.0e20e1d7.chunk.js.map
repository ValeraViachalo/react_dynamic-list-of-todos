{"version":3,"sources":["types/Status.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoList","todo","selectedTodo","setSelectedTodo","className","map","currentTodo","classNames","id","completed","title","type","onClick","handleClick","TodoFilter","setFilter","setQuery","query","onChange","event","target","value","Object","keys","key","str","charAt","toUpperCase","slice","toLowerCase","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","ok","Error","status","statusText","json","TodoModal","close","useState","user","setUser","useEffect","userId","href","email","name","App","isLoading","setIsLoding","setTodo","ALL","filter","errorMessage","setErrorMessage","catch","finally","filteredTodo","ACTIVE","COMPLETED","visibleTodo","useMemo","trim","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e20e1d7.chunk.js","sourcesContent":["export enum Status {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (value: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todo, selectedTodo, setSelectedTodo,\n}) => {\n  const handleClick = (currentTodo: Todo) => {\n    if (setSelectedTodo) {\n      setSelectedTodo(currentTodo);\n    }\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todo.map(currentTodo => (\n          <tr\n            data-cy=\"todo\"\n            key={currentTodo.id}\n            className={classNames({\n              'has-background-info-light': selectedTodo !== null\n              && selectedTodo.id === currentTodo.id,\n            })}\n          >\n            <td className=\"is-vcentered\">{currentTodo.id}</td>\n            {currentTodo.completed ? (\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n            ) : (\n              <td className=\"is-vcentered\" />\n            )}\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={currentTodo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n              >\n                {currentTodo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleClick(currentTodo)}\n              >\n                <span className=\"icon\">\n                  <i className={\n                    selectedTodo !== null && selectedTodo.id === currentTodo.id\n                      ? 'far fa-eye-slash'\n                      : 'far fa-eye'\n                  }\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  query: string;\n  setFilter: (value: Status) => void;\n  setQuery: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilter, setQuery, query,\n}) => {\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilter(event.target.value as Status);\n  };\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleQueryClear = () => {\n    setQuery('');\n  };\n\n  const capitalizeFirstLetter = (str: string) => {\n    return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleFilterChange}\n          >\n            {(Object.keys(Status) as Array<keyof typeof Status>).map(key => (\n              <option\n                value={Status[key]}\n                key={key}\n              >\n                {capitalizeFirstLetter(key)}\n              </option>\n            ))}\n          </select>\n\n        </span>\n      </p>\n\n      <p className=\"\n        control\n        is-expanded\n        has-icons-left\n        has-icons-right\"\n      >\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span\n            className=\"icon is-right\"\n            style={{ pointerEvents: 'all' }}\n          >\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleQueryClear}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(`${res.status} ${res.statusText}`);\n      }\n\n      return res.json();\n    });\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo;\n  close: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  close,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId).then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedTodo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={close}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-success\">\n                  Done\n                </strong>\n              ) : (\n                <strong className=\"has-text-danger\">\n                  Planned\n                </strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { Status } from './types/Status';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoding] = useState(false);\n  const [todo, setTodo] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState(Status.ALL);\n  const [query, setQuery] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    setIsLoding(true);\n    getTodos()\n      .then(setTodo)\n      .catch(() => setErrorMessage('There are no todos'))\n      .finally(() => setIsLoding(false));\n  }, []);\n\n  const filteredTodo = todo.filter(currentTodo => {\n    switch (filter) {\n      case Status.ACTIVE:\n        return !currentTodo.completed;\n\n      case Status.COMPLETED:\n        return currentTodo.completed;\n\n      default:\n        return true;\n    }\n  });\n\n  const visibleTodo = useMemo(() => {\n    if (query.trim()) {\n      return filteredTodo\n        .filter(currentTodo => currentTodo.title.toLowerCase()\n          .includes(query.toLowerCase()));\n    }\n\n    return filteredTodo;\n  }, [todo, filter, query]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">\n              Todos:\n            </h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                setFilter={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && (\n                <Loader />\n              )}\n\n              {todo.length > 0 ? (\n                <TodoList\n                  todo={visibleTodo}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              ) : (\n                <p>\n                  {errorMessage}\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          close={() => setSelectedTodo(null)}\n        />\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}